// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kernel.proto

#include "kernel.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace kernel {
PROTOBUF_CONSTEXPR SyscallRequest::SyscallRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_.syscall_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyscallRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyscallRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyscallRequestDefaultTypeInternal() {}
  union {
    SyscallRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyscallRequestDefaultTypeInternal _SyscallRequest_default_instance_;
PROTOBUF_CONSTEXPR SyscallResponse::SyscallResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyscallResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyscallResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyscallResponseDefaultTypeInternal() {}
  union {
    SyscallResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyscallResponseDefaultTypeInternal _SyscallResponse_default_instance_;
}  // namespace kernel
static ::_pb::Metadata file_level_metadata_kernel_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_kernel_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_kernel_2eproto = nullptr;

const uint32_t TableStruct_kernel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallRequest, _impl_.syscall_),
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallRequest, _impl_.args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::kernel::SyscallResponse, _impl_.error_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::kernel::SyscallRequest)},
  { 8, -1, -1, sizeof(::kernel::SyscallResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::kernel::_SyscallRequest_default_instance_._instance,
  &::kernel::_SyscallResponse_default_instance_._instance,
};

const char descriptor_table_protodef_kernel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014kernel.proto\022\006kernel\"/\n\016SyscallRequest"
  "\022\017\n\007syscall\030\001 \001(\t\022\014\n\004args\030\002 \003(\t\"@\n\017Sysca"
  "llResponse\022\016\n\006status\030\001 \001(\005\022\016\n\006result\030\002 \001"
  "(\t\022\r\n\005error\030\003 \001(\t2Q\n\rKernelSyscall\022@\n\rHa"
  "ndleSyscall\022\026.kernel.SyscallRequest\032\027.ke"
  "rnel.SyscallResponseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_kernel_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_kernel_2eproto = {
    false, false, 228, descriptor_table_protodef_kernel_2eproto,
    "kernel.proto",
    &descriptor_table_kernel_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_kernel_2eproto::offsets,
    file_level_metadata_kernel_2eproto, file_level_enum_descriptors_kernel_2eproto,
    file_level_service_descriptors_kernel_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_kernel_2eproto_getter() {
  return &descriptor_table_kernel_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_kernel_2eproto(&descriptor_table_kernel_2eproto);
namespace kernel {

// ===================================================================

class SyscallRequest::_Internal {
 public:
};

SyscallRequest::SyscallRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kernel.SyscallRequest)
}
SyscallRequest::SyscallRequest(const SyscallRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyscallRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){from._impl_.args_}
    , decltype(_impl_.syscall_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.syscall_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syscall_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_syscall().empty()) {
    _this->_impl_.syscall_.Set(from._internal_syscall(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:kernel.SyscallRequest)
}

inline void SyscallRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){arena}
    , decltype(_impl_.syscall_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.syscall_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syscall_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyscallRequest::~SyscallRequest() {
  // @@protoc_insertion_point(destructor:kernel.SyscallRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyscallRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.args_.~RepeatedPtrField();
  _impl_.syscall_.Destroy();
}

void SyscallRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyscallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kernel.SyscallRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.syscall_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyscallRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string syscall = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_syscall();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kernel.SyscallRequest.syscall"));
        } else
          goto handle_unusual;
        continue;
      // repeated string args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "kernel.SyscallRequest.args"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyscallRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kernel.SyscallRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string syscall = 1;
  if (!this->_internal_syscall().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syscall().data(), static_cast<int>(this->_internal_syscall().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kernel.SyscallRequest.syscall");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_syscall(), target);
  }

  // repeated string args = 2;
  for (int i = 0, n = this->_internal_args_size(); i < n; i++) {
    const auto& s = this->_internal_args(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kernel.SyscallRequest.args");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kernel.SyscallRequest)
  return target;
}

size_t SyscallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kernel.SyscallRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string args = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.args_.size());
  for (int i = 0, n = _impl_.args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.args_.Get(i));
  }

  // string syscall = 1;
  if (!this->_internal_syscall().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syscall());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyscallRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyscallRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyscallRequest::GetClassData() const { return &_class_data_; }


void SyscallRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyscallRequest*>(&to_msg);
  auto& from = static_cast<const SyscallRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kernel.SyscallRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.args_.MergeFrom(from._impl_.args_);
  if (!from._internal_syscall().empty()) {
    _this->_internal_set_syscall(from._internal_syscall());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyscallRequest::CopyFrom(const SyscallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kernel.SyscallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyscallRequest::IsInitialized() const {
  return true;
}

void SyscallRequest::InternalSwap(SyscallRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.syscall_, lhs_arena,
      &other->_impl_.syscall_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyscallRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kernel_2eproto_getter, &descriptor_table_kernel_2eproto_once,
      file_level_metadata_kernel_2eproto[0]);
}

// ===================================================================

class SyscallResponse::_Internal {
 public:
};

SyscallResponse::SyscallResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:kernel.SyscallResponse)
}
SyscallResponse::SyscallResponse(const SyscallResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyscallResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error().empty()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:kernel.SyscallResponse)
}

inline void SyscallResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyscallResponse::~SyscallResponse() {
  // @@protoc_insertion_point(destructor:kernel.SyscallResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyscallResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
  _impl_.error_.Destroy();
}

void SyscallResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyscallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kernel.SyscallResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.error_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyscallResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kernel.SyscallResponse.result"));
        } else
          goto handle_unusual;
        continue;
      // string error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "kernel.SyscallResponse.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyscallResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kernel.SyscallResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string result = 2;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kernel.SyscallResponse.result");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result(), target);
  }

  // string error = 3;
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kernel.SyscallResponse.error");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kernel.SyscallResponse)
  return target;
}

size_t SyscallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kernel.SyscallResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 2;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // string error = 3;
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyscallResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyscallResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyscallResponse::GetClassData() const { return &_class_data_; }


void SyscallResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyscallResponse*>(&to_msg);
  auto& from = static_cast<const SyscallResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kernel.SyscallResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyscallResponse::CopyFrom(const SyscallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kernel.SyscallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyscallResponse::IsInitialized() const {
  return true;
}

void SyscallResponse::InternalSwap(SyscallResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyscallResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kernel_2eproto_getter, &descriptor_table_kernel_2eproto_once,
      file_level_metadata_kernel_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kernel
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kernel::SyscallRequest*
Arena::CreateMaybeMessage< ::kernel::SyscallRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kernel::SyscallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kernel::SyscallResponse*
Arena::CreateMaybeMessage< ::kernel::SyscallResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kernel::SyscallResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
